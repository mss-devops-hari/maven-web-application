pipeline{
agent any


options {
  timestamps()
    buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
}

//triggers {
 // cron ('* * * * *')
 // pollSCM ('* * * * *')
//}

parameters
{
choice(choices: ['development', 'qa', 'master'], description: 'select branch name', name: 'BranchName'), 

string(defaultValue: 'Hari Tec', description: 'Give name parameter value', name: 'Name')
}

tools{
    maven 'maven3.8.6'
}

stages{
stage('CheckOutCode'){
steps{
    slackNotifications('STARTED')
git branch: "${params.BranchName}", credentialsId: 'cc886bdf-15ef-4341-9b81-f195703dd248', url: 'https://github.com/mss-devops-hari/maven-web-application.git'
}
}
stage('Build'){
steps{
sh "mvn clean package"
}
}

stage('ExecuteSonarQubeReport'){
steps{
    sh "mvn clean sonar:sonar"
}
}

stage('UploadArtifactsIntoFactoryRepo'){
steps{
sh "mvn clean deploy"
}
}
stage('DeployAppIntoTomcatServer'){
steps{
sshagent(['5d3c718d-c0a4-4255-a2f7-8bc5745f11de']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@54.161.186.192:/opt/apache-tomcat-9.0.65/webapps/"}
}
}
}//stages closing

post {
  success {
   slackNotifications(currentBuild.result)
  }
  failure {
    slackNotifications(currentBuild.result)
  }
}

}//pipeline closing
//codesnippet for sending slack notifications.

def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#walmart")
}

